# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Build/Test Calendar CI

on:
  push:
    paths:
     - 'hw12-15calendar/cmd/calendar/**'
     - 'hw12-15calendar/internal/**'
     - '!hw12-15calendar/internal/queue/**'
  pull_request:
     paths:
     - 'hw12-15calendar/cmd/calendar/**'
     - 'hw12-15calendar/internal/**'
     - '!hw12-15calendar/internal/queue/**'

jobs:

  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.0-alpine
        env:
          POSTGRES_PASSWORD: event-db
          POSTGRES_USER: event-db
          POSTGRES_DB: event-db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/bin/migrate
        which migrate

    - name: Run migrations
      run: migrate -path "hw12-15calendar/migrations" -database  "postgres://event-db:event-db@localhost:5432/event-db?sslmode=disable" up

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.57
        args: --timeout 3m --config=../.golangci.yml
        working-directory: hw12-15calendar/

    - name: Build
      run: cd hw12-15calendar/cmd/calendar && make build

    - name: Test
      run: |
        sed -i 's/, "postgres"/, "localhost"/g' hw12-15calendar//test/http/server_test.go
        sed -i 's/, "postgres"/, "localhost"/g' hw12-15calendar/internal/storage/sql/storage_test.go
        cd hw12-15calendar/ && make test
