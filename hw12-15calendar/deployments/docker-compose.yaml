version: "3.9"
services:
    calendar-ws:
        build:
         context: ../
         dockerfile: services/calendar-ws/Dockerfile
        ports:
         - "8080:8080"
        depends_on:
         - calendar
        volumes:
         - ./../configs/calendar-ws.yml:/etc/calendar/calendar-ws.yml

    calendar:
        build:
         context: ../
         dockerfile: services/calendar/Dockerfile
        ports:
         - "8088:8088"
         - "55555:55555"
        environment:
         ENV: PROD
        depends_on:
          postgres:
            condition: service_healthy
        volumes:
         - ./../configs/calendar.yml:/etc/calendar/calendar.yml

    scheduler:
       build:
        context: ../
        dockerfile: services/scheduler/Dockerfile
       depends_on:
         postgres:
           condition: service_healthy
         rabbitmq:
           condition: service_healthy
       volumes:
        - ./../configs/scheduler.yml:/etc/calendar/scheduler.yml

    sender:
       build:
        context: ../
        dockerfile: services/sender/Dockerfile
       depends_on:
         rabbitmq:
           condition: service_healthy
       volumes:
        - ./../configs/sender.yml:/etc/calendar/sender.yml

    # Create service with PostgreSQL.
    postgres:
        image: postgres:15.0-alpine
        environment:
         POSTGRES_PASSWORD: event-db
         POSTGRES_USER: event-db
         POSTGRES_DB: event-db
        healthcheck:
         test: ["CMD-SHELL", "pg_isready", "-d", "event-db"]
        volumes:
         - ./../postgres-data:/var/lib/postgresql/data

    # Create service with RabbitMQ.
    rabbitmq:
        image: rabbitmq:3.11.2-management-alpine
        healthcheck:
         test: rabbitmq-diagnostics -q ping
        ports:
         - "15672:15672" # for serve RabbitMQ GUI

    jaeger:
        image: jaegertracing/all-in-one:1.42
        ports:
         - "16686:16686" # for serve Jaeger GUI
