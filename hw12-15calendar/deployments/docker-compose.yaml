version: "3.9"
services:
    calendar-ws:
        build:
         context: ../
         dockerfile: services/calendar-ws/Dockerfile
        ports:
         - "8080:8080"
        links:
         - calendar
        depends_on:
         - calendar

    calendar:
        build:
         context: ../
         dockerfile: services/calendar/Dockerfile
        ports:
         - "8088:8088"
         - "55555:55555"
        environment:
         ENV: PROD
        links:
         - postgres
        depends_on:
          postgres:
            condition: service_healthy

    scheduler:
       build:
        context: ../
        dockerfile: services/scheduler/Dockerfile
       links:
        - postgres
        - rabbitmq
       depends_on:
         postgres:
           condition: service_healthy
         rabbitmq:
           condition: service_healthy

    sender:
       build:
        context: ../
        dockerfile: services/sender/Dockerfile
       links:
        - rabbitmq
       depends_on:
         rabbitmq:
           condition: service_healthy

    # Create service with PostgreSQL.
    postgres:
        image: postgres:15.0-alpine
        environment:
         POSTGRES_PASSWORD: event-db
         POSTGRES_USER: event-db
         POSTGRES_DB: event-db
        healthcheck:
         test: ["CMD-SHELL", "pg_isready", "-d", "event-db"]
         interval: 30s
         timeout: 30s
         retries: 3

    # Create service with RabbitMQ.
    rabbitmq:
        image: rabbitmq:3.11.2-management-alpine
        healthcheck:
         test: rabbitmq-diagnostics -q ping
         interval: 30s
         timeout: 30s
         retries: 3
        ports:
         - 15672:15672 # for serve RabbitMQ GUI

    jaeger:
        image: jaegertracing/all-in-one:1.42
        ports:
         - "16686:16686" # for serve Jaeger GUI
        depends_on:
         - calendar
